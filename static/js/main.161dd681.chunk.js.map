{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","slice","map","genre","index","key","prototype","PropTypes","number","isRequired","string","arrayOf","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0UAMA,SAASA,EAAT,GAA6D,EAA5CC,GAA6C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OACjD,OACE,yBAAKC,UAAU,SACb,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,eACb,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,uBAAGK,UAAU,iBAAiBH,EAAQM,MAAM,EAAG,KAA/C,OACA,wBAAIH,UAAU,UACXD,EAAOK,KAAI,SAACC,EAAOC,GAAR,OACV,wBAAIC,IAAKD,EAAON,UAAU,gBACvBK,SASfZ,EAAMe,UAAY,CAChBd,GAAIe,IAAUC,OAAOC,WACrBf,MAAOa,IAAUG,OAAOD,WACxBd,QAASY,IAAUG,OAAOD,WAC1Bb,OAAQW,IAAUG,OAAOD,WACzBhB,KAAMc,IAAUC,OAAOC,WACvBZ,OAAQU,IAAUI,QAAQJ,IAAUG,QAAQD,YAG/BlB,QC6CAqB,G,kNA1DbC,MAAQ,CACNC,WAAW,EAEXC,OAAQ,I,EAMVC,U,sBAAY,8BAAAC,EAAA,sEAMAC,IAAMC,IACd,4DAPQ,gBAIEJ,EAJF,EAGRK,KACEA,KAAQL,OAMZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAVzB,2C,kEAcVQ,KAAKN,c,+BAKG,IAAD,EACuBM,KAAKT,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,6BAASjB,UAAU,aAChBgB,EACC,yBAAKhB,UAAU,UACb,0BAAMA,UAAU,gBAAhB,eAGF,yBAAKA,UAAU,UACZiB,EAAOb,KAAI,SAAAqB,GACV,OACE,kBAAC,EAAD,CACElB,IAAKkB,EAAM/B,GACXA,GAAI+B,EAAM/B,GACVC,KAAM8B,EAAM9B,KACZC,MAAO6B,EAAM7B,MACbC,QAAS4B,EAAM5B,QACfC,OAAQ2B,EAAMC,mBACd3B,OAAQ0B,EAAM1B,kB,GArDd4B,IAAMC,YCZxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.161dd681.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\n// component가 state가 필요 없으면 class로 할필요 없이 function component로 하셈\n\nfunction Movie({ id, year, title, summary, poster, genres }) {\n  return (\n    <div className=\"movie\">\n      <img src={poster} alt={title} title={title} />\n      <div className=\"movie__data\">\n        <h3 className=\"movie__title\">{title}</h3>\n        <h5 className=\"movie__year\">{year}</h5>\n        <p className=\"movie_summary\">{summary.slice(0, 140)}...</p>\n        <ul className=\"genres\">\n          {genres.map((genre, index) => (\n            <li key={index} className=\"genres_genre\">\n              {genre}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nMovie.prototype = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  year: PropTypes.number.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Movie;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n// import PropTypes from \"prop-types\";\n\n// 파일을 만들어서 컴포넌트를 가져올수도 있지만\n// 안에서 함수로 선언해서 가져오는 방법도 있고, 이는 재사용 가능하다\n// jsx라는 방법 => HTML +  javascript\n\n// {fav}랑 props.fav 랑은 같은거임\n\n// react class component 에서 확장한다\n// render 안에 넣어서 return 해야 보인다\n\n//\nclass App extends React.Component {\n  // 데이터는 변하기 때문에 state를 사용한다\n  // react는 render function을 반환하지 않는다\n  // 매번 render를 호출해야 한다.\n  // setState함수 선언하고 밑에서 this.함수로 사용해야 됨\n\n  state = {\n    isLoading: true,\n    // 미래에 있을수도 있는 거에 대한 선언\n    movies: [],\n  };\n  // component가 생성 되었니??\n\n  // async 이함수는 비동기다이, async가 있어야 await를 쓸수 있다\n  // axios await 해라, 왜냐면 데이터 가져오는데 시간이 필요 하니까\n  getMovies = async () => {\n    // data 안에 data 안에 movies안에 있는 movies를 잡음\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    );\n    // movies가 들어오면, isLoading을 false로 바꿔\n    this.setState({ movies, isLoading: false });\n  };\n\n  componentDidMount() {\n    this.getMovies();\n  }\n  // setState를 호출할때 마다 react는 새로운 state와 함께\n  // render function을 호출 함\n  // 그래서 밑에 this.state.count 값이 계속 바뀔수 있음\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map(movie => {\n              return (\n                <Movie\n                  key={movie.id}\n                  id={movie.id}\n                  year={movie.year}\n                  title={movie.title}\n                  summary={movie.summary}\n                  poster={movie.medium_cover_image}\n                  genres={movie.genres}\n                />\n              );\n            })}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}